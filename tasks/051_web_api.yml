    - name: HERMES station-api backend software
      block:
        - name: HERMES API - install debian packages 
          become: true
          apt:
            install_recommends: yes
            state: present
            name:
              - mariadb-server
              - inotify-tools
              - lm-sensors
              - jq

        - name: HERMES API - Services install - mysql enable
          become: true
          ansible.builtin.service:
            name: mariadb
            enabled: yes
            state: started

        - name: HERMES API - Download HERMES station-api from github
          become: true
          git:
            repo: "git://github.com/DigitalHERMES/station-api.git"
            clone: yes
            dest: "{{ webpub_path }}/station-api"
            version: HEAD
            update: yes
            force: yes

        - name: HERMES API - setting permissions station
          become: true
          ansible.builtin.file:
            path: "{{ webpub_path }}/station-api"
            recurse: yes
            owner: hermes
            group: www-data
            mode: '0775'

        - name: HERMES API - Create a symbolic link for public html
          ansible.builtin.file:
            src: "{{ webpub_path }}/station-api/public"
            dest: "{{ webpub_path }}/html/api"
            owner: hermes
            group: www-data
            state: link

        - name: HERMES API - composer install
          command: "composer install"
          args:
            chdir: "{{ webpub_path }}/station-api"

        - name: HERMES API - gen app key for use in template
          shell: "date | openssl passwd -6 -stdin"
          register: app_key

        - name: HERMES API - process template j2  for env on remote host
          become: yes
          template:
            src: "./conf/api_env.j2"
            dest: "{{ webpub_path }}/station-api/.env"
            group: www-data
            mode: '0744'
            backup: yes

        - name: HERMES API - create database
          become: true
          community.mysql.mysql_db:
            login_unix_socket: /var/run/mysqld/mysqld.sock
            name: hermes
            state: present

        - name: HERMES API - create database user
          become: true
          community.mysql.mysql_user:
            login_unix_socket: /var/run/mysqld/mysqld.sock
            name: "{{ hermes_db_user }}"
            password: "{{ hermes_db_password }}"
            priv: "{{ hermes_db }}.*:ALL"
            state: present

        - name: HERMES API - create database tables
          command: "php artisan migrate:refresh"
          args:
            chdir: "{{ webpub_path }}/station-api/"
                
        - name: HERMES API - populate database tables
          command: "php artisan db:seed"
          args:
            chdir: "{{ webpub_path }}/station-api/"
                
        - name: HERMES API - create user admin TODO 
          command: echo TODO
          args:
            chdir: "{{ webpub_path }}/station-api/"

        - name: UUCP - create inbox path pubdir 
          become: yes
          file: 
            path: "{{ inbox_path }}/"
            owner: "{{ ansible_user }}"
            group: "{{ www_group }}"
            mode: '0777'
            state: directory

        - name: HEMES API - create path .gnupg for www-data
          become: true
          file: 
            path: "{{ webpub_path }}/.gnupg"
            owner: "www-data"
            group: "www-data"
            state: directory
            mode: "0700"

        # - name: HERMES API - disable hmp service
        #   become: true
        #   ansible.builtin.service:
        #     name: hmp
        #     enabled: false
        #     state: stopped
        
